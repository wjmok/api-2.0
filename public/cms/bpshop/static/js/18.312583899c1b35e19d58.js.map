{"version":3,"sources":["webpack:///src/components/page/Menu.vue","webpack:///./src/components/page/Menu.vue?0daa","webpack:///./src/components/page/Menu.vue"],"names":["val","initMainData","imgup","UploadImg","baseSelect","editor","VueEditor","password","token","_this","this","self","postData","log","_context","t0","data","resetChecked","standardForm","getCheckedNodes","id","res","results","parentid","Form","onSubmit","artStandardForm","_this2","sForm","type","_context2","t1","t2","t3","Object","commonFunc","fieldName","page_Menu","render","_vm","_h","$createElement","_c","_self","_v","staticStyle","width","attrs","placeholder","model","value","callback","$$v","filterText","expression","height","border","ref","staticClass","menudata","props","defaultProps","node-key","show-checkbox","accordion","check-strictly","filter-node-method","filterNode","title","visible","dialogFormVisible","on","update:visible","$event","autocomplete","label","label-width","formLabelWidth","input","name","arguments","$set","description","auto-complete","listorder","options","change-on-select","clearable","change","length","_e","imglist","banner","imglimit","imgchange","click","artDialogFormVisible","small_title","keywords","img","defaultcontent","content","contentsave","margin-top","passKey","handleAddfirst","handleAddchild","handleEdit","deleteMenu","addArticle","staticRenderFns","Component","__webpack_require__","normalizeComponent","Menu","__webpack_exports__"],"mappings":"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","file":"static/js/18.312583899c1b35e19d58.js","sourcesContent":["\r\n\r\n\r\n<template>\r\n\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        关键词查询:\r\n        <el-input\r\n          placeholder=\"输入关键字进行过滤\"\r\n          v-model=\"filterText\" style=\"width:260px!important\">\r\n        </el-input>\r\n\r\n      </el-header>\r\n      <el-main style=\"height: 500px; border: 2px solid #eee\">\r\n        <el-tree\r\n          class=\"filter-tree\"\r\n          :data=\"menudata\"\r\n          :props=\"defaultProps\"\r\n          node-key=\"id\"\r\n          show-checkbox\r\n          accordion\r\n          check-strictly\r\n\r\n          :filter-node-method=\"filterNode\"\r\n          ref=\"tree\">\r\n        </el-tree>\r\n\r\n        <el-dialog  title=\"菜单信息\" :visible.sync=\"dialogFormVisible\" >\r\n          <el-form autocomplete=\"off\" >      \r\n            <el-form-item label=\"菜单名称\" :label-width=\"formLabelWidth\" >\r\n              <el-input v-model=\"Form.name\" @input=\"sForm.name = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"描述\" :label-width=\"formLabelWidth\" >\r\n              <el-input v-model=\"Form.description\" @input=\"sForm.description = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n            \r\n            <el-form-item label=\"排序\" :label-width=\"formLabelWidth\">\r\n              <el-input v-model=\"Form.listorder\" @input=\"sForm.listorder = arguments[0]\" auto-complete=\"off\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item v-if=\"sForm.type == 'edit'\" label=\"父级菜单\" :label-width=\"formLabelWidth\">\r\n              <el-cascader\r\n                :options=\"menudata\"\r\n                :props=\"defaultProps\"\r\n                v-model=\"Form.parentMenu_array\"\r\n                @change=\"(val) => {sForm.parentid = val[val.length-1]}\"\r\n                change-on-select\r\n                clearable\r\n                >\r\n              </el-cascader>\r\n            </el-form-item>\r\n            \r\n                    \r\n            <el-form-item label=\"banner图片上传\" >\r\n            <imgup @imgchange = \"(val)=>{imgchange(val,'sForm','banner')}\" :imglist = \"Form.banner\" :imglimit = \"imglimit\"></imgup>\r\n            </el-form-item>\r\n            \r\n            \r\n            <el-button type=\"primary\" @click=\"onSubmit()\">确 定</el-button>        \r\n          </el-form>              \r\n        </el-dialog>\r\n\r\n        <el-dialog  title=\"添加文章\" :visible.sync=\"artDialogFormVisible\" >\r\n          <el-form autocomplete=\"off\" >      \r\n            <el-form-item label=\"文章名称\" :label-width=\"formLabelWidth\" >\r\n              <el-input  v-model=\"Form.title\" @input=\"sForm.title = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"文章短标题\" :label-width=\"formLabelWidth\" >\r\n              <el-input   v-model=\"Form.small_title\" @input=\"sForm.small_title = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"描述\" :label-width=\"formLabelWidth\" >\r\n              <el-input   v-model=\"Form.description\" @input=\"sForm.description = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"关键词\" :label-width=\"formLabelWidth\" >\r\n              <el-input   v-model=\"Form.keywords\" @input=\"sForm.keywords = arguments[0]\">\r\n              </el-input>\r\n            </el-form-item>\r\n            \r\n                    \r\n            <el-form-item label=\"图片上传\" >\r\n            <imgup @imgchange = \"(val)=>{imgchange(val,'sForm','img')}\" :imglist = \"Form.img\" :imglimit = \"imglimit\"></imgup>\r\n            </el-form-item>\r\n            <el-form-item label=\"图文编辑\" >\r\n              <editor :defaultcontent = \"Form.content\" @contentsave = \"(val)=>{\r\n                sForm.content = val;\r\n                Form.content = val;}\"  >\r\n              </editor>\r\n            </el-form-item>\r\n              \r\n            \r\n            <el-button type=\"primary\" @click=\"onSubmit()\">确 定</el-button>  \r\n                  \r\n          </el-form>              \r\n        </el-dialog>\r\n\r\n      </el-main>\r\n      <el-footer style=\"margin-top:20px;\">\r\n        <div class=\"buttons\">\r\n          <el-button v-if=\"passKey == 'chuncuiwangluo'\" @click=\"handleAddfirst\">添加一级菜单</el-button>\r\n          <el-button v-if=\"passKey == 'chuncuiwangluo'\" @click=\"handleAddchild\">添加子菜单</el-button>\r\n          <el-button @click=\"handleEdit\">编辑</el-button>\r\n          <el-button v-if=\"passKey == 'chuncuiwangluo'\" @click=\"deleteMenu\">删除</el-button>\r\n          <el-button @click=\"addArticle\">添加文章</el-button>\r\n          \r\n        </div>\r\n      </el-footer>\r\n    </el-container>\r\n  </div>\r\n \r\n</template>\r\n\r\n<script>\r\nimport {getMenutree,sendMenuEdit,sendMenuAdd,sendMenuDel,sendArtAdd} from '@/api/getData';\r\nimport {notify,sCallBack,cloneForm,formatDate,imgchange,getParentNames,getSubNames} from '@/api/commonFunc';\r\nimport imgup from '../common/UploadImg';\r\nimport baseSelect from '../common/baseSelect';\r\nimport editor from '../common/VueEditor';\r\nimport axios from '../../http.js';\r\n  export default {\r\n    watch: {\r\n      filterText(val) {\r\n        this.$refs.tree.filter(val);\r\n      }\r\n    },\r\n\r\n    created(){\r\n      this.initMainData();\r\n    },\r\n\r\n    components: {\r\n      \r\n      imgup,\r\n      baseSelect,\r\n      editor,\r\n\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        filterText: '',\r\n        menudata:[],\r\n        Form: {},//承载页面数据装载\r\n        standardForm:{\r\n          name:'',\r\n          listorder:'',\r\n          banner:[],\r\n          description:'',\r\n          parentid:'',\r\n          parent_array:[],\r\n        },\r\n        artStandardForm:{\r\n          title:'',\r\n          small_title:'',\r\n          description:'',\r\n          keywords:'',\r\n          img:[],\r\n          content:'请输入内容',\r\n        },\r\n        sForm: {},//承载提交数据装载\r\n        dialogFormVisible: false,//dialog的显示参数，默认不显示\r\n        artDialogFormVisible: false,//dialog的显示参数，默认不显示\r\n        \r\n        imglimit:10,//设置上传插件允许上传的张数\r\n        formLabelWidth: '120px',//设置的el-form-item的宽度\r\n        passKey:this.$store.getters.getUserInfo.password,\r\n        token:this.$store.getters.getUserInfo.token,\r\n        searchItem:{\r\n\r\n        }, \r\n        \r\n      \r\n        defaultProps: {\r\n          children: 'child',\r\n          label: 'name',\r\n          value: 'id',\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      \r\n\r\n      async initMainData(){\r\n        const self =this;\r\n        const postData = {};\r\n        postData.token = self.token;\r\n        try{\r\n          var res = await getMenutree(postData);\r\n        }catch(err){\r\n          console.log(err); \r\n          notify('网络故障','error');\r\n        };\r\n        if(res){\r\n          self.menudata = res.data;\r\n        };\r\n      },\r\n\r\n      \r\n\r\n      //添加一级菜单\r\n      handleAddfirst(){\r\n        const self = this;\r\n        self.resetChecked();\r\n        self.Form = cloneForm(self.standardForm);\r\n        self.sForm = {};\r\n        self.sForm.type = 'add'; \r\n        self.sForm.parentid = '0'; \r\n        self.sForm.token = self.token;\r\n          \r\n        setTimeout(function () {  \r\n             self.dialogFormVisible = true  \r\n          }, 500);\r\n      },\r\n\r\n      //添加子菜单\r\n      handleAddchild(){\r\n        const self = this;\r\n        self.Form = cloneForm(self.standardForm);\r\n        self.sForm = {};\r\n        \r\n        const res = self.getCheckedNodes();\r\n        \r\n        \r\n        if(res){\r\n          self.sForm.parentid = res.id;\r\n          self.sForm.type = 'add'; \r\n          self.sForm.token = self.token;            \r\n          \r\n          setTimeout(function () {  \r\n             self.dialogFormVisible = true  \r\n          }, 500);\r\n        }\r\n      },\r\n      \r\n      //编辑事件\r\n      handleEdit() {\r\n        const self = this;\r\n        self.sForm = {};\r\n        \r\n        const res = self.getCheckedNodes();\r\n        \r\n        if(res){\r\n\r\n          self.Form = cloneForm(res);\r\n          self.sForm.id = res.id;\r\n          self.sForm.type = 'edit'; \r\n          self.sForm.token = self.token;\r\n          const results=[];\r\n          getParentNames(self.menudata,self.Form.parentid,results);\r\n          results.push(self.Form.parentid); \r\n          self.Form['parentMenu_array'] = results;\r\n          console.log(self.Form); \r\n          setTimeout(function () {  \r\n             self.dialogFormVisible = true  \r\n          }, 500); \r\n          \r\n        }            \r\n      },\r\n      //删除事件\r\n      deleteMenu(){\r\n        const self = this;\r\n        self.sForm = {};\r\n        const delres = self.getCheckedNodes();\r\n        \r\n        if(delres){\r\n          self.sForm.id = delres.id;\r\n          self.sForm.token = self.token;\r\n          self.sForm.type = 'del';\r\n          self.onSubmit();\r\n        }\r\n      },\r\n      //添加文章\r\n      addArticle(){\r\n        const self = this;\r\n        self.Form = cloneForm(self.artStandardForm);\r\n        self.sForm = {};\r\n\r\n        const res = self.getCheckedNodes();\r\n        if(res){\r\n          self.sForm.menu_id = res.id;\r\n          self.sForm.token = self.token;\r\n          self.sForm.type = 'addArticle'; \r\n          \r\n          setTimeout(function () {  \r\n             self.artDialogFormVisible = true  \r\n          }, 500);\r\n        }\r\n\r\n      },\r\n\r\n\r\n\r\n      //dialog中提交按钮事件\r\n      async onSubmit() {\r\n\r\n        const self = this;\r\n        console.log(self.sForm);\r\n       \r\n        if (self.sForm.type == 'edit') { \r\n\r\n          if(self.sForm.parentid == self.sForm.id){\r\n            notify('父级不能与子集相同','error');\r\n            console.log('execute');\r\n            return false;\r\n          };\r\n          if(self.sForm.parentid == undefined){\r\n            self.sForm.parentid = '0';\r\n          };\r\n\r\n          if(self.sForm.parentid){\r\n            if(self.sForm.parentid == self.sForm.id){\r\n              notify('父级不能与子集相同','error');\r\n              console.log('execute');\r\n              return false;\r\n            };\r\n            if(self.sForm.parentid == undefined){\r\n              self.sForm.parentid = '0';\r\n            }else{\r\n              const mres = [];\r\n              getSubNames(self.menudata,mres,'id',self.sForm.parentid);\r\n              console.log(mres[0]);\r\n              if(mres.length > 0 && mres[0].parentid == self.sForm.id){\r\n                self.sForm.cmenuid = mres[0].id;\r\n                delete self.sForm.parentid;\r\n              };\r\n            }; \r\n          };\r\n\r\n          delete self.sForm.type;\r\n          try {\r\n            var res = await sendMenuEdit(self.sForm);\r\n          } catch (err) {\r\n              console.log(err); \r\n              notify('网络故障','error');              \r\n          };\r\n          self.sForm.type = 'edit';\r\n\r\n        }else if(self.sForm.type == 'add'){\r\n \r\n          \r\n            delete self.sForm.type;\r\n            try {\r\n               var res = await sendMenuAdd(self.sForm); \r\n            } catch (err) {\r\n                console.log(err); \r\n                notify('网络故障','error');             \r\n            };\r\n            self.sForm.type = 'add';\r\n            console.log(self.sForm);\r\n\r\n          \r\n                                                              \r\n        }else if(self.sForm.type == 'addArticle'){\r\n\r\n          delete self.sForm.type;\r\n          try {\r\n            var res = await sendArtAdd(self.sForm);\r\n          } catch (err) {\r\n              console.log(err); \r\n              notify('网络故障','error');\r\n          };\r\n          self.sForm.type = 'addArticle';\r\n          \r\n        }else if(self.sForm.type == 'del'){\r\n\r\n          delete self.sForm.type;\r\n          try{\r\n            var res = await sendMenuDel(self.sForm);\r\n          }catch(err){\r\n            console.log(err);\r\n            notify('网络故障','error');\r\n          };\r\n          self.sForm.type = 'del';\r\n        };\r\n\r\n        if(res){\r\n          var fCall =  sCallBack(res);\r\n          if(fCall == 'success'){\r\n            if(self.sForm.type == 'addArticle'){\r\n              self.artDialogFormVisible = false;\r\n            }else{\r\n              self.dialogFormVisible = false;\r\n            };\r\n            self.resetChecked();\r\n            self.initMainData();\r\n          };\r\n        };\r\n        \r\n      },\r\n      \r\n\r\n      \r\n\r\n      \r\n\r\n\r\n\r\n      //menu过滤筛选事件\r\n      filterNode(value, data) {\r\n        if (!value) return true;\r\n        return data.name.indexOf(value) !== -1;\r\n      },\r\n      //获取menu tree点击事件\r\n      getCheckedNodes() {\r\n        const data = this.$refs.tree.getCheckedNodes();\r\n        if(data.length > 1){\r\n            notify('请只选择一个菜单','warning');\r\n            this.resetChecked(); \r\n        };\r\n        if(data.length == 1){\r\n           return data[0];\r\n        };\r\n        if(data.length == 0){\r\n          notify('请选择一个菜单','warning');\r\n          this.resetChecked();\r\n        }\r\n      },\r\n      //清空选中上传状态\r\n      resetChecked() {\r\n        this.$refs.tree.setCheckedKeys([]);\r\n      },\r\n\r\n\r\n\r\n\r\n      //图片上传的回调\r\n      imgchange(data,formName,fieldName){\r\n        return imgchange(this,data,formName,fieldName);\r\n      },\r\n\r\n\r\n      \r\n    }\r\n  }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/page/Menu.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-container',[_c('el-header',[_vm._v(\"\\n      关键词查询:\\n      \"),_c('el-input',{staticStyle:{\"width\":\"260px!important\"},attrs:{\"placeholder\":\"输入关键字进行过滤\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}})],1),_vm._v(\" \"),_c('el-main',{staticStyle:{\"height\":\"500px\",\"border\":\"2px solid #eee\"}},[_c('el-tree',{ref:\"tree\",staticClass:\"filter-tree\",attrs:{\"data\":_vm.menudata,\"props\":_vm.defaultProps,\"node-key\":\"id\",\"show-checkbox\":\"\",\"accordion\":\"\",\"check-strictly\":\"\",\"filter-node-method\":_vm.filterNode}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"菜单信息\",\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{attrs:{\"autocomplete\":\"off\"}},[_c('el-form-item',{attrs:{\"label\":\"菜单名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.name = arguments[0]}},model:{value:(_vm.Form.name),callback:function ($$v) {_vm.$set(_vm.Form, \"name\", $$v)},expression:\"Form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.description = arguments[0]}},model:{value:(_vm.Form.description),callback:function ($$v) {_vm.$set(_vm.Form, \"description\", $$v)},expression:\"Form.description\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"排序\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},on:{\"input\":function($event){_vm.sForm.listorder = arguments[0]}},model:{value:(_vm.Form.listorder),callback:function ($$v) {_vm.$set(_vm.Form, \"listorder\", $$v)},expression:\"Form.listorder\"}})],1),_vm._v(\" \"),(_vm.sForm.type == 'edit')?_c('el-form-item',{attrs:{\"label\":\"父级菜单\",\"label-width\":_vm.formLabelWidth}},[_c('el-cascader',{attrs:{\"options\":_vm.menudata,\"props\":_vm.defaultProps,\"change-on-select\":\"\",\"clearable\":\"\"},on:{\"change\":function (val) {_vm.sForm.parentid = val[val.length-1]}},model:{value:(_vm.Form.parentMenu_array),callback:function ($$v) {_vm.$set(_vm.Form, \"parentMenu_array\", $$v)},expression:\"Form.parentMenu_array\"}})],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"banner图片上传\"}},[_c('imgup',{attrs:{\"imglist\":_vm.Form.banner,\"imglimit\":_vm.imglimit},on:{\"imgchange\":function (val){_vm.imgchange(val,'sForm','banner')}}})],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.onSubmit()}}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加文章\",\"visible\":_vm.artDialogFormVisible},on:{\"update:visible\":function($event){_vm.artDialogFormVisible=$event}}},[_c('el-form',{attrs:{\"autocomplete\":\"off\"}},[_c('el-form-item',{attrs:{\"label\":\"文章名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.title = arguments[0]}},model:{value:(_vm.Form.title),callback:function ($$v) {_vm.$set(_vm.Form, \"title\", $$v)},expression:\"Form.title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"文章短标题\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.small_title = arguments[0]}},model:{value:(_vm.Form.small_title),callback:function ($$v) {_vm.$set(_vm.Form, \"small_title\", $$v)},expression:\"Form.small_title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.description = arguments[0]}},model:{value:(_vm.Form.description),callback:function ($$v) {_vm.$set(_vm.Form, \"description\", $$v)},expression:\"Form.description\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"关键词\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{on:{\"input\":function($event){_vm.sForm.keywords = arguments[0]}},model:{value:(_vm.Form.keywords),callback:function ($$v) {_vm.$set(_vm.Form, \"keywords\", $$v)},expression:\"Form.keywords\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"图片上传\"}},[_c('imgup',{attrs:{\"imglist\":_vm.Form.img,\"imglimit\":_vm.imglimit},on:{\"imgchange\":function (val){_vm.imgchange(val,'sForm','img')}}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"图文编辑\"}},[_c('editor',{attrs:{\"defaultcontent\":_vm.Form.content},on:{\"contentsave\":function (val){\n              _vm.sForm.content = val;\n              _vm.Form.content = val;}}})],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.onSubmit()}}},[_vm._v(\"确 定\")])],1)],1)],1),_vm._v(\" \"),_c('el-footer',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticClass:\"buttons\"},[(_vm.passKey == 'chuncuiwangluo')?_c('el-button',{on:{\"click\":_vm.handleAddfirst}},[_vm._v(\"添加一级菜单\")]):_vm._e(),_vm._v(\" \"),(_vm.passKey == 'chuncuiwangluo')?_c('el-button',{on:{\"click\":_vm.handleAddchild}},[_vm._v(\"添加子菜单\")]):_vm._e(),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.handleEdit}},[_vm._v(\"编辑\")]),_vm._v(\" \"),(_vm.passKey == 'chuncuiwangluo')?_c('el-button',{on:{\"click\":_vm.deleteMenu}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.addArticle}},[_vm._v(\"添加文章\")])],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a95ae164\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/Menu.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Menu.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Menu.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a95ae164\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Menu.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/Menu.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}